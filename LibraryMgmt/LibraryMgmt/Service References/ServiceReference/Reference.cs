//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryMgmt.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rmf", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class Rmf : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentCatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FirstInvNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdRmfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastInvNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentCat {
            get {
                return this.ContentCatField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentCatField, value) != true)) {
                    this.ContentCatField = value;
                    this.RaisePropertyChanged("ContentCat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateIn {
            get {
                return this.DateInField;
            }
            set {
                if ((this.DateInField.Equals(value) != true)) {
                    this.DateInField = value;
                    this.RaisePropertyChanged("DateIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOut {
            get {
                return this.DateOutField;
            }
            set {
                if ((this.DateOutField.Equals(value) != true)) {
                    this.DateOutField = value;
                    this.RaisePropertyChanged("DateOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocId {
            get {
                return this.DocIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocIdField, value) != true)) {
                    this.DocIdField = value;
                    this.RaisePropertyChanged("DocId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DocImg {
            get {
                return this.DocImgField;
            }
            set {
                if ((object.ReferenceEquals(this.DocImgField, value) != true)) {
                    this.DocImgField = value;
                    this.RaisePropertyChanged("DocImg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FirstInvNr {
            get {
                return this.FirstInvNrField;
            }
            set {
                if ((this.FirstInvNrField.Equals(value) != true)) {
                    this.FirstInvNrField = value;
                    this.RaisePropertyChanged("FirstInvNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdRmf {
            get {
                return this.IdRmfField;
            }
            set {
                if ((object.ReferenceEquals(this.IdRmfField, value) != true)) {
                    this.IdRmfField = value;
                    this.RaisePropertyChanged("IdRmf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsOut {
            get {
                return this.IsOutField;
            }
            set {
                if ((this.IsOutField.Equals(value) != true)) {
                    this.IsOutField = value;
                    this.RaisePropertyChanged("IsOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastInvNr {
            get {
                return this.LastInvNrField;
            }
            set {
                if ((this.LastInvNrField.Equals(value) != true)) {
                    this.LastInvNrField = value;
                    this.RaisePropertyChanged("LastInvNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutCause {
            get {
                return this.OutCauseField;
            }
            set {
                if ((object.ReferenceEquals(this.OutCauseField, value) != true)) {
                    this.OutCauseField = value;
                    this.RaisePropertyChanged("OutCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalValue {
            get {
                return this.TotalValueField;
            }
            set {
                if ((this.TotalValueField.Equals(value) != true)) {
                    this.TotalValueField = value;
                    this.RaisePropertyChanged("TotalValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnualReport", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class AnualReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, LibraryMgmt.ServiceReference.AnualReportData> AboutEntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, LibraryMgmt.ServiceReference.AnualReportData> AboutExitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, LibraryMgmt.ServiceReference.AnualReportData> AboutEntries {
            get {
                return this.AboutEntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutEntriesField, value) != true)) {
                    this.AboutEntriesField = value;
                    this.RaisePropertyChanged("AboutEntries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, LibraryMgmt.ServiceReference.AnualReportData> AboutExits {
            get {
                return this.AboutExitsField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutExitsField, value) != true)) {
                    this.AboutExitsField = value;
                    this.RaisePropertyChanged("AboutExits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnualReportData", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class AnualReportData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AverageValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NrOfCollectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AverageValue {
            get {
                return this.AverageValueField;
            }
            set {
                if ((this.AverageValueField.Equals(value) != true)) {
                    this.AverageValueField = value;
                    this.RaisePropertyChanged("AverageValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NrOfCollections {
            get {
                return this.NrOfCollectionsField;
            }
            set {
                if ((this.NrOfCollectionsField.Equals(value) != true)) {
                    this.NrOfCollectionsField = value;
                    this.RaisePropertyChanged("NrOfCollections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalQuantity {
            get {
                return this.TotalQuantityField;
            }
            set {
                if ((this.TotalQuantityField.Equals(value) != true)) {
                    this.TotalQuantityField = value;
                    this.RaisePropertyChanged("TotalQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalValue {
            get {
                return this.TotalValueField;
            }
            set {
                if ((this.TotalValueField.Equals(value) != true)) {
                    this.TotalValueField = value;
                    this.RaisePropertyChanged("TotalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Part3Report", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService.Reports")]
    [System.SerializableAttribute()]
    public partial class Part3Report : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, LibraryMgmt.ServiceReference.Part3ReportData> DataCollectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, LibraryMgmt.ServiceReference.Part3ReportData> DataCollection {
            get {
                return this.DataCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DataCollectionField, value) != true)) {
                    this.DataCollectionField = value;
                    this.RaisePropertyChanged("DataCollection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Part3ReportData", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService.Reports")]
    [System.SerializableAttribute()]
    public partial class Part3ReportData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BooksLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OutBooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegisteredBooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BooksLeft {
            get {
                return this.BooksLeftField;
            }
            set {
                if ((this.BooksLeftField.Equals(value) != true)) {
                    this.BooksLeftField = value;
                    this.RaisePropertyChanged("BooksLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OutBooks {
            get {
                return this.OutBooksField;
            }
            set {
                if ((this.OutBooksField.Equals(value) != true)) {
                    this.OutBooksField = value;
                    this.RaisePropertyChanged("OutBooks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegisteredBooks {
            get {
                return this.RegisteredBooksField;
            }
            set {
                if ((this.RegisteredBooksField.Equals(value) != true)) {
                    this.RegisteredBooksField = value;
                    this.RaisePropertyChanged("RegisteredBooks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanLendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryMgmt.ServiceReference.Rmf CollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanLend {
            get {
                return this.CanLendField;
            }
            set {
                if ((this.CanLendField.Equals(value) != true)) {
                    this.CanLendField = value;
                    this.RaisePropertyChanged("CanLend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryMgmt.ServiceReference.Rmf Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionId {
            get {
                return this.CollectionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionIdField, value) != true)) {
                    this.CollectionIdField = value;
                    this.RaisePropertyChanged("CollectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnHand", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class OnHand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryMgmt.ServiceReference.Book BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryMgmt.ServiceReference.BookCode BookCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OnHandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReturnDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryMgmt.ServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryMgmt.ServiceReference.Book Book {
            get {
                return this.BookField;
            }
            set {
                if ((object.ReferenceEquals(this.BookField, value) != true)) {
                    this.BookField = value;
                    this.RaisePropertyChanged("Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryMgmt.ServiceReference.BookCode BookCode {
            get {
                return this.BookCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BookCodeField, value) != true)) {
                    this.BookCodeField = value;
                    this.RaisePropertyChanged("BookCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LendDate {
            get {
                return this.LendDateField;
            }
            set {
                if ((this.LendDateField.Equals(value) != true)) {
                    this.LendDateField = value;
                    this.RaisePropertyChanged("LendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OnHandId {
            get {
                return this.OnHandIdField;
            }
            set {
                if ((this.OnHandIdField.Equals(value) != true)) {
                    this.OnHandIdField = value;
                    this.RaisePropertyChanged("OnHandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReturnDate {
            get {
                return this.ReturnDateField;
            }
            set {
                if ((this.ReturnDateField.Equals(value) != true)) {
                    this.ReturnDateField = value;
                    this.RaisePropertyChanged("ReturnDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryMgmt.ServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookCode", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class BookCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryMgmt.ServiceReference.Book BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryMgmt.ServiceReference.Book Book {
            get {
                return this.BookField;
            }
            set {
                if ((object.ReferenceEquals(this.BookField, value) != true)) {
                    this.BookField = value;
                    this.RaisePropertyChanged("Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdnpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] UserPicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Idnp {
            get {
                return this.IdnpField;
            }
            set {
                if ((object.ReferenceEquals(this.IdnpField, value) != true)) {
                    this.IdnpField = value;
                    this.RaisePropertyChanged("Idnp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] UserPic {
            get {
                return this.UserPicField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPicField, value) != true)) {
                    this.UserPicField = value;
                    this.RaisePropertyChanged("UserPic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookCodeOwned", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class BookCodeOwned : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryMgmt.ServiceReference.BookCode BookCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReturnDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryMgmt.ServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryMgmt.ServiceReference.BookCode BookCode {
            get {
                return this.BookCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BookCodeField, value) != true)) {
                    this.BookCodeField = value;
                    this.RaisePropertyChanged("BookCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LendDate {
            get {
                return this.LendDateField;
            }
            set {
                if ((this.LendDateField.Equals(value) != true)) {
                    this.LendDateField = value;
                    this.RaisePropertyChanged("LendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReturnDate {
            get {
                return this.ReturnDateField;
            }
            set {
                if ((this.ReturnDateField.Equals(value) != true)) {
                    this.ReturnDateField = value;
                    this.RaisePropertyChanged("ReturnDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryMgmt.ServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReservedBook", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class ReservedBook : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryMgmt.ServiceReference.BookCode BookCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryMgmt.ServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryMgmt.ServiceReference.BookCode BookCode {
            get {
                return this.BookCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BookCodeField, value) != true)) {
                    this.BookCodeField = value;
                    this.RaisePropertyChanged("BookCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservationId {
            get {
                return this.ReservationIdField;
            }
            set {
                if ((this.ReservationIdField.Equals(value) != true)) {
                    this.ReservationIdField = value;
                    this.RaisePropertyChanged("ReservationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeOut {
            get {
                return this.TimeOutField;
            }
            set {
                if ((this.TimeOutField.Equals(value) != true)) {
                    this.TimeOutField = value;
                    this.RaisePropertyChanged("TimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryMgmt.ServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BooksReport", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class BooksReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, LibraryMgmt.ServiceReference.BooksReportData> CategoryInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TitlesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, LibraryMgmt.ServiceReference.BooksReportData> CategoryInfo {
            get {
                return this.CategoryInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryInfoField, value) != true)) {
                    this.CategoryInfoField = value;
                    this.RaisePropertyChanged("CategoryInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TitlesCount {
            get {
                return this.TitlesCountField;
            }
            set {
                if ((this.TitlesCountField.Equals(value) != true)) {
                    this.TitlesCountField = value;
                    this.RaisePropertyChanged("TitlesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BooksReportData", Namespace="http://schemas.datacontract.org/2004/07/ProjectLibraryService")]
    [System.SerializableAttribute()]
    public partial class BooksReportData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryTitlesCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryAmount {
            get {
                return this.CategoryAmountField;
            }
            set {
                if ((this.CategoryAmountField.Equals(value) != true)) {
                    this.CategoryAmountField = value;
                    this.RaisePropertyChanged("CategoryAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryTitlesCount {
            get {
                return this.CategoryTitlesCountField;
            }
            set {
                if ((this.CategoryTitlesCountField.Equals(value) != true)) {
                    this.CategoryTitlesCountField = value;
                    this.RaisePropertyChanged("CategoryTitlesCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.ILibraryService")]
    public interface ILibraryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetRmfList", ReplyAction="http://tempuri.org/ILibraryService/GetRmfListResponse")]
        LibraryMgmt.ServiceReference.Rmf[] GetRmfList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetRmfList", ReplyAction="http://tempuri.org/ILibraryService/GetRmfListResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Rmf[]> GetRmfListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/InsertRmf", ReplyAction="http://tempuri.org/ILibraryService/InsertRmfResponse")]
        bool InsertRmf(LibraryMgmt.ServiceReference.Rmf newRmf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/InsertRmf", ReplyAction="http://tempuri.org/ILibraryService/InsertRmfResponse")]
        System.Threading.Tasks.Task<bool> InsertRmfAsync(LibraryMgmt.ServiceReference.Rmf newRmf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteRmf", ReplyAction="http://tempuri.org/ILibraryService/DeleteRmfResponse")]
        bool DeleteRmf(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteRmf", ReplyAction="http://tempuri.org/ILibraryService/DeleteRmfResponse")]
        System.Threading.Tasks.Task<bool> DeleteRmfAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateRmf", ReplyAction="http://tempuri.org/ILibraryService/UpdateRmfResponse")]
        bool UpdateRmf(LibraryMgmt.ServiceReference.Rmf rmfObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateRmf", ReplyAction="http://tempuri.org/ILibraryService/UpdateRmfResponse")]
        System.Threading.Tasks.Task<bool> UpdateRmfAsync(LibraryMgmt.ServiceReference.Rmf rmfObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetRmfById", ReplyAction="http://tempuri.org/ILibraryService/GetRmfByIdResponse")]
        LibraryMgmt.ServiceReference.Rmf GetRmfById(string idRmf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetRmfById", ReplyAction="http://tempuri.org/ILibraryService/GetRmfByIdResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Rmf> GetRmfByIdAsync(string idRmf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLastIndex", ReplyAction="http://tempuri.org/ILibraryService/GetLastIndexResponse")]
        string GetLastIndex();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLastIndex", ReplyAction="http://tempuri.org/ILibraryService/GetLastIndexResponse")]
        System.Threading.Tasks.Task<string> GetLastIndexAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetRmfByDocId", ReplyAction="http://tempuri.org/ILibraryService/GetRmfByDocIdResponse")]
        LibraryMgmt.ServiceReference.Rmf GetRmfByDocId(string docId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetRmfByDocId", ReplyAction="http://tempuri.org/ILibraryService/GetRmfByDocIdResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Rmf> GetRmfByDocIdAsync(string docId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLastLastInvNr", ReplyAction="http://tempuri.org/ILibraryService/GetLastLastInvNrResponse")]
        int GetLastLastInvNr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLastLastInvNr", ReplyAction="http://tempuri.org/ILibraryService/GetLastLastInvNrResponse")]
        System.Threading.Tasks.Task<int> GetLastLastInvNrAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetInRmf", ReplyAction="http://tempuri.org/ILibraryService/GetInRmfResponse")]
        LibraryMgmt.ServiceReference.Rmf[] GetInRmf();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetInRmf", ReplyAction="http://tempuri.org/ILibraryService/GetInRmfResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Rmf[]> GetInRmfAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetOutRmf", ReplyAction="http://tempuri.org/ILibraryService/GetOutRmfResponse")]
        LibraryMgmt.ServiceReference.Rmf[] GetOutRmf();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetOutRmf", ReplyAction="http://tempuri.org/ILibraryService/GetOutRmfResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Rmf[]> GetOutRmfAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GenerateAnualReport", ReplyAction="http://tempuri.org/ILibraryService/GenerateAnualReportResponse")]
        LibraryMgmt.ServiceReference.AnualReport GenerateAnualReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GenerateAnualReport", ReplyAction="http://tempuri.org/ILibraryService/GenerateAnualReportResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.AnualReport> GenerateAnualReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GeneratePart3Report", ReplyAction="http://tempuri.org/ILibraryService/GeneratePart3ReportResponse")]
        LibraryMgmt.ServiceReference.Part3Report GeneratePart3Report();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GeneratePart3Report", ReplyAction="http://tempuri.org/ILibraryService/GeneratePart3ReportResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Part3Report> GeneratePart3ReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteMultipleRmf", ReplyAction="http://tempuri.org/ILibraryService/DeleteMultipleRmfResponse")]
        void DeleteMultipleRmf(LibraryMgmt.ServiceReference.Rmf[] l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteMultipleRmf", ReplyAction="http://tempuri.org/ILibraryService/DeleteMultipleRmfResponse")]
        System.Threading.Tasks.Task DeleteMultipleRmfAsync(LibraryMgmt.ServiceReference.Rmf[] l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAllBooks", ReplyAction="http://tempuri.org/ILibraryService/GetAllBooksResponse")]
        LibraryMgmt.ServiceReference.Book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAllBooks", ReplyAction="http://tempuri.org/ILibraryService/GetAllBooksResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddBook", ReplyAction="http://tempuri.org/ILibraryService/AddBookResponse")]
        void AddBook(LibraryMgmt.ServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddBook", ReplyAction="http://tempuri.org/ILibraryService/AddBookResponse")]
        System.Threading.Tasks.Task AddBookAsync(LibraryMgmt.ServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteBookById", ReplyAction="http://tempuri.org/ILibraryService/DeleteBookByIdResponse")]
        void DeleteBookById(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteBookById", ReplyAction="http://tempuri.org/ILibraryService/DeleteBookByIdResponse")]
        System.Threading.Tasks.Task DeleteBookByIdAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBooksByRmfId", ReplyAction="http://tempuri.org/ILibraryService/GetBooksByRmfIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/ILibraryService/GetBooksByRmfIdArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        LibraryMgmt.ServiceReference.Book[] GetBooksByRmfId(string rmfId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBooksByRmfId", ReplyAction="http://tempuri.org/ILibraryService/GetBooksByRmfIdResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Book[]> GetBooksByRmfIdAsync(string rmfId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateBook", ReplyAction="http://tempuri.org/ILibraryService/UpdateBookResponse")]
        void UpdateBook(LibraryMgmt.ServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateBook", ReplyAction="http://tempuri.org/ILibraryService/UpdateBookResponse")]
        System.Threading.Tasks.Task UpdateBookAsync(LibraryMgmt.ServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAllOnHands", ReplyAction="http://tempuri.org/ILibraryService/GetAllOnHandsResponse")]
        LibraryMgmt.ServiceReference.OnHand[] GetAllOnHands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAllOnHands", ReplyAction="http://tempuri.org/ILibraryService/GetAllOnHandsResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.OnHand[]> GetAllOnHandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteOnHand", ReplyAction="http://tempuri.org/ILibraryService/DeleteOnHandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/ILibraryService/DeleteOnHandArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void DeleteOnHand(LibraryMgmt.ServiceReference.OnHand onHand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteOnHand", ReplyAction="http://tempuri.org/ILibraryService/DeleteOnHandResponse")]
        System.Threading.Tasks.Task DeleteOnHandAsync(LibraryMgmt.ServiceReference.OnHand onHand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBookCodes", ReplyAction="http://tempuri.org/ILibraryService/GetBookCodesResponse")]
        LibraryMgmt.ServiceReference.BookCode[] GetBookCodes(LibraryMgmt.ServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBookCodes", ReplyAction="http://tempuri.org/ILibraryService/GetBookCodesResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.BookCode[]> GetBookCodesAsync(LibraryMgmt.ServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetUsers", ReplyAction="http://tempuri.org/ILibraryService/GetUsersResponse")]
        LibraryMgmt.ServiceReference.User[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetUsers", ReplyAction="http://tempuri.org/ILibraryService/GetUsersResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetUserById", ReplyAction="http://tempuri.org/ILibraryService/GetUserByIdResponse")]
        LibraryMgmt.ServiceReference.User GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetUserById", ReplyAction="http://tempuri.org/ILibraryService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.User> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddUser", ReplyAction="http://tempuri.org/ILibraryService/AddUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/ILibraryService/AddUserArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void AddUser(LibraryMgmt.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddUser", ReplyAction="http://tempuri.org/ILibraryService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(LibraryMgmt.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateUser", ReplyAction="http://tempuri.org/ILibraryService/UpdateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/ILibraryService/UpdateUserArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void UpdateUser(LibraryMgmt.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateUser", ReplyAction="http://tempuri.org/ILibraryService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(LibraryMgmt.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteUser", ReplyAction="http://tempuri.org/ILibraryService/DeleteUserResponse")]
        void DeleteUser(LibraryMgmt.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteUser", ReplyAction="http://tempuri.org/ILibraryService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(LibraryMgmt.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddReg", ReplyAction="http://tempuri.org/ILibraryService/AddRegResponse")]
        void AddReg(LibraryMgmt.ServiceReference.OnHand registration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddReg", ReplyAction="http://tempuri.org/ILibraryService/AddRegResponse")]
        System.Threading.Tasks.Task AddRegAsync(LibraryMgmt.ServiceReference.OnHand registration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetOnHands", ReplyAction="http://tempuri.org/ILibraryService/GetOnHandsResponse")]
        LibraryMgmt.ServiceReference.OnHand[] GetOnHands(LibraryMgmt.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetOnHands", ReplyAction="http://tempuri.org/ILibraryService/GetOnHandsResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.OnHand[]> GetOnHandsAsync(LibraryMgmt.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBookCodesOnHand", ReplyAction="http://tempuri.org/ILibraryService/GetBookCodesOnHandResponse")]
        LibraryMgmt.ServiceReference.OnHand[] GetBookCodesOnHand(LibraryMgmt.ServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBookCodesOnHand", ReplyAction="http://tempuri.org/ILibraryService/GetBookCodesOnHandResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.OnHand[]> GetBookCodesOnHandAsync(LibraryMgmt.ServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBookCodesNotOnHand", ReplyAction="http://tempuri.org/ILibraryService/GetBookCodesNotOnHandResponse")]
        LibraryMgmt.ServiceReference.BookCode[] GetBookCodesNotOnHand(LibraryMgmt.ServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBookCodesNotOnHand", ReplyAction="http://tempuri.org/ILibraryService/GetBookCodesNotOnHandResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.BookCode[]> GetBookCodesNotOnHandAsync(LibraryMgmt.ServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetUserOwnedBooks", ReplyAction="http://tempuri.org/ILibraryService/GetUserOwnedBooksResponse")]
        LibraryMgmt.ServiceReference.BookCodeOwned[] GetUserOwnedBooks(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetUserOwnedBooks", ReplyAction="http://tempuri.org/ILibraryService/GetUserOwnedBooksResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.BookCodeOwned[]> GetUserOwnedBooksAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddReservationPrimitive", ReplyAction="http://tempuri.org/ILibraryService/AddReservationPrimitiveResponse")]
        void AddReservationPrimitive(int bookCode, int userId, System.TimeSpan expiresIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddReservationPrimitive", ReplyAction="http://tempuri.org/ILibraryService/AddReservationPrimitiveResponse")]
        System.Threading.Tasks.Task AddReservationPrimitiveAsync(int bookCode, int userId, System.TimeSpan expiresIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddReservation", ReplyAction="http://tempuri.org/ILibraryService/AddReservationResponse")]
        void AddReservation(LibraryMgmt.ServiceReference.BookCode bookCode, LibraryMgmt.ServiceReference.User user, System.TimeSpan expiresIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddReservation", ReplyAction="http://tempuri.org/ILibraryService/AddReservationResponse")]
        System.Threading.Tasks.Task AddReservationAsync(LibraryMgmt.ServiceReference.BookCode bookCode, LibraryMgmt.ServiceReference.User user, System.TimeSpan expiresIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteBookReservation", ReplyAction="http://tempuri.org/ILibraryService/DeleteBookReservationResponse")]
        void DeleteBookReservation(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteBookReservation", ReplyAction="http://tempuri.org/ILibraryService/DeleteBookReservationResponse")]
        System.Threading.Tasks.Task DeleteBookReservationAsync(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteExpiredReservations", ReplyAction="http://tempuri.org/ILibraryService/DeleteExpiredReservationsResponse")]
        void DeleteExpiredReservations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteExpiredReservations", ReplyAction="http://tempuri.org/ILibraryService/DeleteExpiredReservationsResponse")]
        System.Threading.Tasks.Task DeleteExpiredReservationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetReservedBooks", ReplyAction="http://tempuri.org/ILibraryService/GetReservedBooksResponse")]
        LibraryMgmt.ServiceReference.ReservedBook[] GetReservedBooks(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetReservedBooks", ReplyAction="http://tempuri.org/ILibraryService/GetReservedBooksResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.ReservedBook[]> GetReservedBooksAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetReservations", ReplyAction="http://tempuri.org/ILibraryService/GetReservationsResponse")]
        LibraryMgmt.ServiceReference.ReservedBook[] GetReservations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetReservations", ReplyAction="http://tempuri.org/ILibraryService/GetReservationsResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.ReservedBook[]> GetReservationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/StopReservationSatelite", ReplyAction="http://tempuri.org/ILibraryService/StopReservationSateliteResponse")]
        void StopReservationSatelite();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/StopReservationSatelite", ReplyAction="http://tempuri.org/ILibraryService/StopReservationSateliteResponse")]
        System.Threading.Tasks.Task StopReservationSateliteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/StartReservationSatelite", ReplyAction="http://tempuri.org/ILibraryService/StartReservationSateliteResponse")]
        void StartReservationSatelite();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/StartReservationSatelite", ReplyAction="http://tempuri.org/ILibraryService/StartReservationSateliteResponse")]
        System.Threading.Tasks.Task StartReservationSateliteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetReservationSateliteState", ReplyAction="http://tempuri.org/ILibraryService/GetReservationSateliteStateResponse")]
        bool GetReservationSateliteState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetReservationSateliteState", ReplyAction="http://tempuri.org/ILibraryService/GetReservationSateliteStateResponse")]
        System.Threading.Tasks.Task<bool> GetReservationSateliteStateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GenerateBookReport", ReplyAction="http://tempuri.org/ILibraryService/GenerateBookReportResponse")]
        LibraryMgmt.ServiceReference.BooksReport GenerateBookReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GenerateBookReport", ReplyAction="http://tempuri.org/ILibraryService/GenerateBookReportResponse")]
        System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.BooksReport> GenerateBookReportAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryServiceChannel : LibraryMgmt.ServiceReference.ILibraryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryServiceClient : System.ServiceModel.ClientBase<LibraryMgmt.ServiceReference.ILibraryService>, LibraryMgmt.ServiceReference.ILibraryService {
        
        public LibraryServiceClient() {
        }
        
        public LibraryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LibraryMgmt.ServiceReference.Rmf[] GetRmfList() {
            return base.Channel.GetRmfList();
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Rmf[]> GetRmfListAsync() {
            return base.Channel.GetRmfListAsync();
        }
        
        public bool InsertRmf(LibraryMgmt.ServiceReference.Rmf newRmf) {
            return base.Channel.InsertRmf(newRmf);
        }
        
        public System.Threading.Tasks.Task<bool> InsertRmfAsync(LibraryMgmt.ServiceReference.Rmf newRmf) {
            return base.Channel.InsertRmfAsync(newRmf);
        }
        
        public bool DeleteRmf(string id) {
            return base.Channel.DeleteRmf(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRmfAsync(string id) {
            return base.Channel.DeleteRmfAsync(id);
        }
        
        public bool UpdateRmf(LibraryMgmt.ServiceReference.Rmf rmfObj) {
            return base.Channel.UpdateRmf(rmfObj);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRmfAsync(LibraryMgmt.ServiceReference.Rmf rmfObj) {
            return base.Channel.UpdateRmfAsync(rmfObj);
        }
        
        public LibraryMgmt.ServiceReference.Rmf GetRmfById(string idRmf) {
            return base.Channel.GetRmfById(idRmf);
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Rmf> GetRmfByIdAsync(string idRmf) {
            return base.Channel.GetRmfByIdAsync(idRmf);
        }
        
        public string GetLastIndex() {
            return base.Channel.GetLastIndex();
        }
        
        public System.Threading.Tasks.Task<string> GetLastIndexAsync() {
            return base.Channel.GetLastIndexAsync();
        }
        
        public LibraryMgmt.ServiceReference.Rmf GetRmfByDocId(string docId) {
            return base.Channel.GetRmfByDocId(docId);
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Rmf> GetRmfByDocIdAsync(string docId) {
            return base.Channel.GetRmfByDocIdAsync(docId);
        }
        
        public int GetLastLastInvNr() {
            return base.Channel.GetLastLastInvNr();
        }
        
        public System.Threading.Tasks.Task<int> GetLastLastInvNrAsync() {
            return base.Channel.GetLastLastInvNrAsync();
        }
        
        public LibraryMgmt.ServiceReference.Rmf[] GetInRmf() {
            return base.Channel.GetInRmf();
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Rmf[]> GetInRmfAsync() {
            return base.Channel.GetInRmfAsync();
        }
        
        public LibraryMgmt.ServiceReference.Rmf[] GetOutRmf() {
            return base.Channel.GetOutRmf();
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Rmf[]> GetOutRmfAsync() {
            return base.Channel.GetOutRmfAsync();
        }
        
        public LibraryMgmt.ServiceReference.AnualReport GenerateAnualReport() {
            return base.Channel.GenerateAnualReport();
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.AnualReport> GenerateAnualReportAsync() {
            return base.Channel.GenerateAnualReportAsync();
        }
        
        public LibraryMgmt.ServiceReference.Part3Report GeneratePart3Report() {
            return base.Channel.GeneratePart3Report();
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Part3Report> GeneratePart3ReportAsync() {
            return base.Channel.GeneratePart3ReportAsync();
        }
        
        public void DeleteMultipleRmf(LibraryMgmt.ServiceReference.Rmf[] l) {
            base.Channel.DeleteMultipleRmf(l);
        }
        
        public System.Threading.Tasks.Task DeleteMultipleRmfAsync(LibraryMgmt.ServiceReference.Rmf[] l) {
            return base.Channel.DeleteMultipleRmfAsync(l);
        }
        
        public LibraryMgmt.ServiceReference.Book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public void AddBook(LibraryMgmt.ServiceReference.Book book) {
            base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task AddBookAsync(LibraryMgmt.ServiceReference.Book book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public void DeleteBookById(int bookId) {
            base.Channel.DeleteBookById(bookId);
        }
        
        public System.Threading.Tasks.Task DeleteBookByIdAsync(int bookId) {
            return base.Channel.DeleteBookByIdAsync(bookId);
        }
        
        public LibraryMgmt.ServiceReference.Book[] GetBooksByRmfId(string rmfId) {
            return base.Channel.GetBooksByRmfId(rmfId);
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.Book[]> GetBooksByRmfIdAsync(string rmfId) {
            return base.Channel.GetBooksByRmfIdAsync(rmfId);
        }
        
        public void UpdateBook(LibraryMgmt.ServiceReference.Book book) {
            base.Channel.UpdateBook(book);
        }
        
        public System.Threading.Tasks.Task UpdateBookAsync(LibraryMgmt.ServiceReference.Book book) {
            return base.Channel.UpdateBookAsync(book);
        }
        
        public LibraryMgmt.ServiceReference.OnHand[] GetAllOnHands() {
            return base.Channel.GetAllOnHands();
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.OnHand[]> GetAllOnHandsAsync() {
            return base.Channel.GetAllOnHandsAsync();
        }
        
        public void DeleteOnHand(LibraryMgmt.ServiceReference.OnHand onHand) {
            base.Channel.DeleteOnHand(onHand);
        }
        
        public System.Threading.Tasks.Task DeleteOnHandAsync(LibraryMgmt.ServiceReference.OnHand onHand) {
            return base.Channel.DeleteOnHandAsync(onHand);
        }
        
        public LibraryMgmt.ServiceReference.BookCode[] GetBookCodes(LibraryMgmt.ServiceReference.Book book) {
            return base.Channel.GetBookCodes(book);
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.BookCode[]> GetBookCodesAsync(LibraryMgmt.ServiceReference.Book book) {
            return base.Channel.GetBookCodesAsync(book);
        }
        
        public LibraryMgmt.ServiceReference.User[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.User[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public LibraryMgmt.ServiceReference.User GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.User> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public void AddUser(LibraryMgmt.ServiceReference.User user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(LibraryMgmt.ServiceReference.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public void UpdateUser(LibraryMgmt.ServiceReference.User user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(LibraryMgmt.ServiceReference.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public void DeleteUser(LibraryMgmt.ServiceReference.User user) {
            base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(LibraryMgmt.ServiceReference.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public void AddReg(LibraryMgmt.ServiceReference.OnHand registration) {
            base.Channel.AddReg(registration);
        }
        
        public System.Threading.Tasks.Task AddRegAsync(LibraryMgmt.ServiceReference.OnHand registration) {
            return base.Channel.AddRegAsync(registration);
        }
        
        public LibraryMgmt.ServiceReference.OnHand[] GetOnHands(LibraryMgmt.ServiceReference.User user) {
            return base.Channel.GetOnHands(user);
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.OnHand[]> GetOnHandsAsync(LibraryMgmt.ServiceReference.User user) {
            return base.Channel.GetOnHandsAsync(user);
        }
        
        public LibraryMgmt.ServiceReference.OnHand[] GetBookCodesOnHand(LibraryMgmt.ServiceReference.Book book) {
            return base.Channel.GetBookCodesOnHand(book);
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.OnHand[]> GetBookCodesOnHandAsync(LibraryMgmt.ServiceReference.Book book) {
            return base.Channel.GetBookCodesOnHandAsync(book);
        }
        
        public LibraryMgmt.ServiceReference.BookCode[] GetBookCodesNotOnHand(LibraryMgmt.ServiceReference.Book book) {
            return base.Channel.GetBookCodesNotOnHand(book);
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.BookCode[]> GetBookCodesNotOnHandAsync(LibraryMgmt.ServiceReference.Book book) {
            return base.Channel.GetBookCodesNotOnHandAsync(book);
        }
        
        public LibraryMgmt.ServiceReference.BookCodeOwned[] GetUserOwnedBooks(int userId) {
            return base.Channel.GetUserOwnedBooks(userId);
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.BookCodeOwned[]> GetUserOwnedBooksAsync(int userId) {
            return base.Channel.GetUserOwnedBooksAsync(userId);
        }
        
        public void AddReservationPrimitive(int bookCode, int userId, System.TimeSpan expiresIn) {
            base.Channel.AddReservationPrimitive(bookCode, userId, expiresIn);
        }
        
        public System.Threading.Tasks.Task AddReservationPrimitiveAsync(int bookCode, int userId, System.TimeSpan expiresIn) {
            return base.Channel.AddReservationPrimitiveAsync(bookCode, userId, expiresIn);
        }
        
        public void AddReservation(LibraryMgmt.ServiceReference.BookCode bookCode, LibraryMgmt.ServiceReference.User user, System.TimeSpan expiresIn) {
            base.Channel.AddReservation(bookCode, user, expiresIn);
        }
        
        public System.Threading.Tasks.Task AddReservationAsync(LibraryMgmt.ServiceReference.BookCode bookCode, LibraryMgmt.ServiceReference.User user, System.TimeSpan expiresIn) {
            return base.Channel.AddReservationAsync(bookCode, user, expiresIn);
        }
        
        public void DeleteBookReservation(int reservationId) {
            base.Channel.DeleteBookReservation(reservationId);
        }
        
        public System.Threading.Tasks.Task DeleteBookReservationAsync(int reservationId) {
            return base.Channel.DeleteBookReservationAsync(reservationId);
        }
        
        public void DeleteExpiredReservations() {
            base.Channel.DeleteExpiredReservations();
        }
        
        public System.Threading.Tasks.Task DeleteExpiredReservationsAsync() {
            return base.Channel.DeleteExpiredReservationsAsync();
        }
        
        public LibraryMgmt.ServiceReference.ReservedBook[] GetReservedBooks(int userId) {
            return base.Channel.GetReservedBooks(userId);
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.ReservedBook[]> GetReservedBooksAsync(int userId) {
            return base.Channel.GetReservedBooksAsync(userId);
        }
        
        public LibraryMgmt.ServiceReference.ReservedBook[] GetReservations() {
            return base.Channel.GetReservations();
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.ReservedBook[]> GetReservationsAsync() {
            return base.Channel.GetReservationsAsync();
        }
        
        public void StopReservationSatelite() {
            base.Channel.StopReservationSatelite();
        }
        
        public System.Threading.Tasks.Task StopReservationSateliteAsync() {
            return base.Channel.StopReservationSateliteAsync();
        }
        
        public void StartReservationSatelite() {
            base.Channel.StartReservationSatelite();
        }
        
        public System.Threading.Tasks.Task StartReservationSateliteAsync() {
            return base.Channel.StartReservationSateliteAsync();
        }
        
        public bool GetReservationSateliteState() {
            return base.Channel.GetReservationSateliteState();
        }
        
        public System.Threading.Tasks.Task<bool> GetReservationSateliteStateAsync() {
            return base.Channel.GetReservationSateliteStateAsync();
        }
        
        public LibraryMgmt.ServiceReference.BooksReport GenerateBookReport() {
            return base.Channel.GenerateBookReport();
        }
        
        public System.Threading.Tasks.Task<LibraryMgmt.ServiceReference.BooksReport> GenerateBookReportAsync() {
            return base.Channel.GenerateBookReportAsync();
        }
    }
}
